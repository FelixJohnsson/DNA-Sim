# BATTLE BLOODLINES
# A FIGHTER MANAGEMENT GAME
# WITH DNA SEQUENCES AND GENETIC ALGORITHMS FOR SOLDIERS
#
# The game is about managing a group of fighters. The fighters are generated by their DNA sequences and get their physical and mental traits from their DNA sequence.

import random
from GENERATE_DNA import generate_chromosome
from ALLENES import get_all_attributes

class Character:
    def __init__(self, name):
        self.DNA = generate_chromosome() # 400 locus DNA sequence (1200 codons)
        self.name = name
        self.attributes = get_all_attributes(self.DNA)
        self.age = random.randint(18, 50)

        print(self.attributes)

    # FROM DNA SEQUENCE
        self.height = self.attributes['height']
        self.torso_length = self.attributes['torso_length']
        self.arm_length = self.attributes['arm_length']
        self.leg_length = self.attributes['leg_length']

        self.musculature_type = self.attributes['musculature_value']
        self.metabolism = self.attributes['metabolism_value']
        self.flexibility = self.attributes['flexibility_value']
        self.pain_tolerance = self.attributes['pain_tolerance_value']
        self.vision = self.attributes['vision_value']
        self.hearing = self.attributes['hearing_value']
        self.regeneration = self.attributes['regeneration_value']
        self.blood_type = self.attributes['blood_type_value']
        self.brain_type = self.attributes['brain_type_value']
        self.lung_capacity = self.attributes['lung_capacity_value']

        self.weight = 0

        self.strength = 0
        self.agility = 0

        self.intelligence = 0
        self.charisma = 0

    # FROM DNA SEQUENCE AND ENVIRONMENT
        self.loyalty = 0
        self.morale = 0
        self.discipline = 0
        self.bravery = 0

        self.traits = []
        self.skills = []
        self.abilities = []
        
        self.hp = 0 # Should be a calculation all all the attributes and traits
        self.damage = 0 # Should be a calculation all all the attributes and traits
        self.defence = 0 # Should be a calculation all all the attributes and traits
        self.speed = 0 # Should be a calculation all all the attributes and traits

    # FROM THE ENVIRONMENT
        self.equipment = []
        self.inventory = []

        self.battle_experience = 0
        self.battle_kills = 0
        self.battle_wins = 0
        self.battle_wounds = 0

    def calculate_physical_attributes(self):
        pass

    def calculate_mental_attributes(self):
        pass

    def calculate_battle_attributes(self):
        pass

    def calculate_experience(self):
        pass

    def calculate_battle_experience(self):
        pass

    def calculate_battle_kills(self):
        pass

    def calculate_battle_wins(self):
        pass

    def calculate_battle_wounds(self):
        pass

new_character = Character('Boby Bob')
